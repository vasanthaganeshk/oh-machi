Terminals unused in grammar

   LAMBDA


State 4 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce


Grammar

    0 $accept: template $end

    1 template: typelines

    2 typelines: typelines typeline
    3          | typeline

    4 typeline: expression
    5         | block COLON blockstmt
    6         | PASS

    7 block: IF expression
    8      | DEF IDENTIFIER OBRACE argsdefinition EBRACE

    9 argsdefinition: argsdefinition COMMA IDENTIFIER
   10               | IDENTIFIER
   11               | %empty

   12 argscall: argscall COMMA expression
   13         | expression
   14         | %empty

   15 blockstmt: blockstmt INDENTTOK typeline
   16          | INDENTTOK typeline

   17 expression: IDENTIFIER ASSIGNMENT expression
   18           | OBRACE expression EBRACE
   19           | BITWISEINV expression
   20           | expression POWER expression
   21           | expression STAR expression
   22           | expression DIVISION expression
   23           | expression FLOOR expression
   24           | expression REMAINDER expression
   25           | expression PLUS expression
   26           | expression MINUS expression
   27           | expression LEFTSHIFT expression
   28           | expression RIGHTSHIFT expression
   29           | expression BITWISEAND expression
   30           | expression BITWISEXOR expression
   31           | expression BITWISEOR expression
   32           | expression IN iterable
   33           | expression NOTIN iterable
   34           | expression IS expression
   35           | expression ISNOT expression
   36           | expression LESSTHAN expression
   37           | expression GREATERTHAN expression
   38           | expression DOUBLEEQUAL expression
   39           | expression NOTEQUAL expression
   40           | expression LESSTHOREQ expression
   41           | expression GREATTHOREQ expression
   42           | NOT expression
   43           | expression AND expression
   44           | expression OR expression
   45           | IDENTIFIER
   46           | INT
   47           | STRING
   48           | DECIMAL
   49           | IDENTIFIER OBRACE argscall EBRACE

   50 iterable: IDENTIFIER
   51         | RANGE OBRACE expression EBRACE


Terminals, with rules where they appear

$end (0) 0
error (256)
INT (258) 46
DECIMAL (259) 48
STRING (260) 47
IDENTIFIER (261) 8 9 10 17 45 49 50
INDENTTOK (262) 15 16
IF (263) 7
PASS (264) 6
COLON (265) 5
OBRACE (266) 8 18 49 51
EBRACE (267) 8 18 49 51
RANGE (268) 51
COMMA (269) 9 12
DEF (270) 8
ASSIGNMENT (271) 17
LAMBDA (272)
OR (273) 44
AND (274) 43
NOT (275) 42
IN (276) 32
NOTIN (277) 33
IS (278) 34
ISNOT (279) 35
LESSTHAN (280) 36
GREATERTHAN (281) 37
DOUBLEEQUAL (282) 38
NOTEQUAL (283) 39
LESSTHOREQ (284) 40
GREATTHOREQ (285) 41
BITWISEOR (286) 31
BITWISEXOR (287) 30
BITWISEAND (288) 29
LEFTSHIFT (289) 27
RIGHTSHIFT (290) 28
PLUS (291) 25
MINUS (292) 26
STAR (293) 21
DIVISION (294) 22
FLOOR (295) 23
REMAINDER (296) 24
POWER (297) 20
BITWISEINV (298) 19


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
template (45)
    on left: 1, on right: 0
typelines (46)
    on left: 2 3, on right: 1 2
typeline (47)
    on left: 4 5 6, on right: 2 3 15 16
block (48)
    on left: 7 8, on right: 5
argsdefinition (49)
    on left: 9 10 11, on right: 8 9
argscall (50)
    on left: 12 13 14, on right: 12 49
blockstmt (51)
    on left: 15 16, on right: 5 15
expression (52)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 42 43 44 45 46 47 48 49, on right: 4 7 12
    13 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 42 43 44 51
iterable (53)
    on left: 50 51, on right: 32 33


State 0

    0 $accept: . template $end
    1 template: . typelines
    2 typelines: . typelines typeline
    3          | . typeline
    4 typeline: . expression
    5         | . block COLON blockstmt
    6         | . PASS
    7 block: . IF expression
    8      | . DEF IDENTIFIER OBRACE argsdefinition EBRACE
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 5
    PASS        shift, and go to state 6
    OBRACE      shift, and go to state 7
    DEF         shift, and go to state 8
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    template    go to state 11
    typelines   go to state 12
    typeline    go to state 13
    block       go to state 14
    expression  go to state 15


State 1

   46 expression: INT .

    $default  reduce using rule 46 (expression)


State 2

   48 expression: DECIMAL .

    $default  reduce using rule 48 (expression)


State 3

   47 expression: STRING .

    $default  reduce using rule 47 (expression)


State 4

   17 expression: IDENTIFIER . ASSIGNMENT expression
   45           | IDENTIFIER .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, POWER, BITWISEINV]
   49           | IDENTIFIER . OBRACE argscall EBRACE

    OBRACE      shift, and go to state 16
    ASSIGNMENT  shift, and go to state 17

    OBRACE    [reduce using rule 45 (expression)]
    $default  reduce using rule 45 (expression)


State 5

    7 block: IF . expression
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 18


State 6

    6 typeline: PASS .

    $default  reduce using rule 6 (typeline)


State 7

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   18           | OBRACE . expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 19


State 8

    8 block: DEF . IDENTIFIER OBRACE argsdefinition EBRACE

    IDENTIFIER  shift, and go to state 20


State 9

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   42           | NOT . expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 21


State 10

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   19           | BITWISEINV . expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 22


State 11

    0 $accept: template . $end

    $end  shift, and go to state 23


State 12

    1 template: typelines .  [$end]
    2 typelines: typelines . typeline
    4 typeline: . expression
    5         | . block COLON blockstmt
    6         | . PASS
    7 block: . IF expression
    8      | . DEF IDENTIFIER OBRACE argsdefinition EBRACE
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 5
    PASS        shift, and go to state 6
    OBRACE      shift, and go to state 7
    DEF         shift, and go to state 8
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    $default  reduce using rule 1 (template)

    typeline    go to state 24
    block       go to state 14
    expression  go to state 15


State 13

    3 typelines: typeline .

    $default  reduce using rule 3 (typelines)


State 14

    5 typeline: block . COLON blockstmt

    COLON  shift, and go to state 25


State 15

    4 typeline: expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, OBRACE, DEF, NOT, BITWISEINV]
   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 4 (typeline)


State 16

   12 argscall: . argscall COMMA expression
   13         | . expression
   14         | . %empty  [EBRACE, COMMA]
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE
   49           | IDENTIFIER OBRACE . argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    $default  reduce using rule 14 (argscall)

    argscall    go to state 50
    expression  go to state 51


State 17

   17 expression: . IDENTIFIER ASSIGNMENT expression
   17           | IDENTIFIER ASSIGNMENT . expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 52


State 18

    7 block: IF expression .  [COLON]
   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 7 (block)


State 19

   18 expression: OBRACE expression . EBRACE
   20           | expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    EBRACE       shift, and go to state 53
    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49


State 20

    8 block: DEF IDENTIFIER . OBRACE argsdefinition EBRACE

    OBRACE  shift, and go to state 54


State 21

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   42           | NOT expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, BITWISEINV]
   43           | expression . AND expression
   44           | expression . OR expression

    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 42 (expression)

    Conflict between rule 42 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 42 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 42 and token IN resolved as shift (NOT < IN).
    Conflict between rule 42 and token NOTIN resolved as shift (NOT < NOTIN).
    Conflict between rule 42 and token IS resolved as shift (NOT < IS).
    Conflict between rule 42 and token ISNOT resolved as shift (NOT < ISNOT).
    Conflict between rule 42 and token LESSTHAN resolved as shift (NOT < LESSTHAN).
    Conflict between rule 42 and token GREATERTHAN resolved as shift (NOT < GREATERTHAN).
    Conflict between rule 42 and token DOUBLEEQUAL resolved as shift (NOT < DOUBLEEQUAL).
    Conflict between rule 42 and token NOTEQUAL resolved as shift (NOT < NOTEQUAL).
    Conflict between rule 42 and token LESSTHOREQ resolved as shift (NOT < LESSTHOREQ).
    Conflict between rule 42 and token GREATTHOREQ resolved as shift (NOT < GREATTHOREQ).
    Conflict between rule 42 and token BITWISEOR resolved as shift (NOT < BITWISEOR).
    Conflict between rule 42 and token BITWISEXOR resolved as shift (NOT < BITWISEXOR).
    Conflict between rule 42 and token BITWISEAND resolved as shift (NOT < BITWISEAND).
    Conflict between rule 42 and token LEFTSHIFT resolved as shift (NOT < LEFTSHIFT).
    Conflict between rule 42 and token RIGHTSHIFT resolved as shift (NOT < RIGHTSHIFT).
    Conflict between rule 42 and token PLUS resolved as shift (NOT < PLUS).
    Conflict between rule 42 and token MINUS resolved as shift (NOT < MINUS).
    Conflict between rule 42 and token STAR resolved as shift (NOT < STAR).
    Conflict between rule 42 and token DIVISION resolved as shift (NOT < DIVISION).
    Conflict between rule 42 and token FLOOR resolved as shift (NOT < FLOOR).
    Conflict between rule 42 and token REMAINDER resolved as shift (NOT < REMAINDER).
    Conflict between rule 42 and token POWER resolved as shift (NOT < POWER).


State 22

   19 expression: BITWISEINV expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, POWER, BITWISEINV]
   20           | expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    $default  reduce using rule 19 (expression)

    Conflict between rule 19 and token OR resolved as reduce (OR < BITWISEINV).
    Conflict between rule 19 and token AND resolved as reduce (AND < BITWISEINV).
    Conflict between rule 19 and token IN resolved as reduce (IN < BITWISEINV).
    Conflict between rule 19 and token NOTIN resolved as reduce (NOTIN < BITWISEINV).
    Conflict between rule 19 and token IS resolved as reduce (IS < BITWISEINV).
    Conflict between rule 19 and token ISNOT resolved as reduce (ISNOT < BITWISEINV).
    Conflict between rule 19 and token LESSTHAN resolved as reduce (LESSTHAN < BITWISEINV).
    Conflict between rule 19 and token GREATERTHAN resolved as reduce (GREATERTHAN < BITWISEINV).
    Conflict between rule 19 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < BITWISEINV).
    Conflict between rule 19 and token NOTEQUAL resolved as reduce (NOTEQUAL < BITWISEINV).
    Conflict between rule 19 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < BITWISEINV).
    Conflict between rule 19 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < BITWISEINV).
    Conflict between rule 19 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEINV).
    Conflict between rule 19 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEINV).
    Conflict between rule 19 and token BITWISEAND resolved as reduce (BITWISEAND < BITWISEINV).
    Conflict between rule 19 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < BITWISEINV).
    Conflict between rule 19 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < BITWISEINV).
    Conflict between rule 19 and token PLUS resolved as reduce (PLUS < BITWISEINV).
    Conflict between rule 19 and token MINUS resolved as reduce (MINUS < BITWISEINV).
    Conflict between rule 19 and token STAR resolved as reduce (STAR < BITWISEINV).
    Conflict between rule 19 and token DIVISION resolved as reduce (DIVISION < BITWISEINV).
    Conflict between rule 19 and token FLOOR resolved as reduce (FLOOR < BITWISEINV).
    Conflict between rule 19 and token REMAINDER resolved as reduce (REMAINDER < BITWISEINV).
    Conflict between rule 19 and token POWER resolved as reduce (POWER < BITWISEINV).


State 23

    0 $accept: template $end .

    $default  accept


State 24

    2 typelines: typelines typeline .

    $default  reduce using rule 2 (typelines)


State 25

    5 typeline: block COLON . blockstmt
   15 blockstmt: . blockstmt INDENTTOK typeline
   16          | . INDENTTOK typeline

    INDENTTOK  shift, and go to state 55

    blockstmt  go to state 56


State 26

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   44           | expression OR . expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 57


State 27

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   43           | expression AND . expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 58


State 28

   32 expression: expression IN . iterable
   50 iterable: . IDENTIFIER
   51         | . RANGE OBRACE expression EBRACE

    IDENTIFIER  shift, and go to state 59
    RANGE       shift, and go to state 60

    iterable  go to state 61


State 29

   33 expression: expression NOTIN . iterable
   50 iterable: . IDENTIFIER
   51         | . RANGE OBRACE expression EBRACE

    IDENTIFIER  shift, and go to state 59
    RANGE       shift, and go to state 60

    iterable  go to state 62


State 30

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   34           | expression IS . expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 63


State 31

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   35           | expression ISNOT . expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 64


State 32

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   36           | expression LESSTHAN . expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 65


State 33

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   37           | expression GREATERTHAN . expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 66


State 34

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   38           | expression DOUBLEEQUAL . expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 67


State 35

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   39           | expression NOTEQUAL . expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 68


State 36

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   40           | expression LESSTHOREQ . expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 69


State 37

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   41           | expression GREATTHOREQ . expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 70


State 38

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   31           | expression BITWISEOR . expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 71


State 39

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   30           | expression BITWISEXOR . expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 72


State 40

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   29           | expression BITWISEAND . expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 73


State 41

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   27           | expression LEFTSHIFT . expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 74


State 42

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   28           | expression RIGHTSHIFT . expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 75


State 43

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   25           | expression PLUS . expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 76


State 44

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   26           | expression MINUS . expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 77


State 45

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   21           | expression STAR . expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 78


State 46

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   22           | expression DIVISION . expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 79


State 47

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   23           | expression FLOOR . expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 80


State 48

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   24           | expression REMAINDER . expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 81


State 49

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   20           | expression POWER . expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 82


State 50

   12 argscall: argscall . COMMA expression
   49 expression: IDENTIFIER OBRACE argscall . EBRACE

    EBRACE  shift, and go to state 83
    COMMA   shift, and go to state 84


State 51

   13 argscall: expression .  [EBRACE, COMMA]
   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 13 (argscall)


State 52

   17 expression: IDENTIFIER ASSIGNMENT expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, NOT, BITWISEINV]
   20           | expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 17 (expression)

    Conflict between rule 17 and token OR resolved as shift (ASSIGNMENT < OR).
    Conflict between rule 17 and token AND resolved as shift (ASSIGNMENT < AND).
    Conflict between rule 17 and token IN resolved as shift (ASSIGNMENT < IN).
    Conflict between rule 17 and token NOTIN resolved as shift (ASSIGNMENT < NOTIN).
    Conflict between rule 17 and token IS resolved as shift (ASSIGNMENT < IS).
    Conflict between rule 17 and token ISNOT resolved as shift (ASSIGNMENT < ISNOT).
    Conflict between rule 17 and token LESSTHAN resolved as shift (ASSIGNMENT < LESSTHAN).
    Conflict between rule 17 and token GREATERTHAN resolved as shift (ASSIGNMENT < GREATERTHAN).
    Conflict between rule 17 and token DOUBLEEQUAL resolved as shift (ASSIGNMENT < DOUBLEEQUAL).
    Conflict between rule 17 and token NOTEQUAL resolved as shift (ASSIGNMENT < NOTEQUAL).
    Conflict between rule 17 and token LESSTHOREQ resolved as shift (ASSIGNMENT < LESSTHOREQ).
    Conflict between rule 17 and token GREATTHOREQ resolved as shift (ASSIGNMENT < GREATTHOREQ).
    Conflict between rule 17 and token BITWISEOR resolved as shift (ASSIGNMENT < BITWISEOR).
    Conflict between rule 17 and token BITWISEXOR resolved as shift (ASSIGNMENT < BITWISEXOR).
    Conflict between rule 17 and token BITWISEAND resolved as shift (ASSIGNMENT < BITWISEAND).
    Conflict between rule 17 and token LEFTSHIFT resolved as shift (ASSIGNMENT < LEFTSHIFT).
    Conflict between rule 17 and token RIGHTSHIFT resolved as shift (ASSIGNMENT < RIGHTSHIFT).
    Conflict between rule 17 and token PLUS resolved as shift (ASSIGNMENT < PLUS).
    Conflict between rule 17 and token MINUS resolved as shift (ASSIGNMENT < MINUS).
    Conflict between rule 17 and token STAR resolved as shift (ASSIGNMENT < STAR).
    Conflict between rule 17 and token DIVISION resolved as shift (ASSIGNMENT < DIVISION).
    Conflict between rule 17 and token FLOOR resolved as shift (ASSIGNMENT < FLOOR).
    Conflict between rule 17 and token REMAINDER resolved as shift (ASSIGNMENT < REMAINDER).
    Conflict between rule 17 and token POWER resolved as shift (ASSIGNMENT < POWER).


State 53

   18 expression: OBRACE expression EBRACE .

    $default  reduce using rule 18 (expression)


State 54

    8 block: DEF IDENTIFIER OBRACE . argsdefinition EBRACE
    9 argsdefinition: . argsdefinition COMMA IDENTIFIER
   10               | . IDENTIFIER
   11               | . %empty  [EBRACE, COMMA]

    IDENTIFIER  shift, and go to state 85

    $default  reduce using rule 11 (argsdefinition)

    argsdefinition  go to state 86


State 55

    4 typeline: . expression
    5         | . block COLON blockstmt
    6         | . PASS
    7 block: . IF expression
    8      | . DEF IDENTIFIER OBRACE argsdefinition EBRACE
   16 blockstmt: INDENTTOK . typeline
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 5
    PASS        shift, and go to state 6
    OBRACE      shift, and go to state 7
    DEF         shift, and go to state 8
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    typeline    go to state 87
    block       go to state 14
    expression  go to state 15


State 56

    5 typeline: block COLON blockstmt .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, OBRACE, DEF, NOT, BITWISEINV]
   15 blockstmt: blockstmt . INDENTTOK typeline

    INDENTTOK  shift, and go to state 88

    INDENTTOK  [reduce using rule 5 (typeline)]
    $default   reduce using rule 5 (typeline)


State 57

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression
   44           | expression OR expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, NOT, BITWISEINV]

    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 44 (expression)

    Conflict between rule 44 and token OR resolved as reduce (%left OR).
    Conflict between rule 44 and token AND resolved as shift (OR < AND).
    Conflict between rule 44 and token IN resolved as shift (OR < IN).
    Conflict between rule 44 and token NOTIN resolved as shift (OR < NOTIN).
    Conflict between rule 44 and token IS resolved as shift (OR < IS).
    Conflict between rule 44 and token ISNOT resolved as shift (OR < ISNOT).
    Conflict between rule 44 and token LESSTHAN resolved as shift (OR < LESSTHAN).
    Conflict between rule 44 and token GREATERTHAN resolved as shift (OR < GREATERTHAN).
    Conflict between rule 44 and token DOUBLEEQUAL resolved as shift (OR < DOUBLEEQUAL).
    Conflict between rule 44 and token NOTEQUAL resolved as shift (OR < NOTEQUAL).
    Conflict between rule 44 and token LESSTHOREQ resolved as shift (OR < LESSTHOREQ).
    Conflict between rule 44 and token GREATTHOREQ resolved as shift (OR < GREATTHOREQ).
    Conflict between rule 44 and token BITWISEOR resolved as shift (OR < BITWISEOR).
    Conflict between rule 44 and token BITWISEXOR resolved as shift (OR < BITWISEXOR).
    Conflict between rule 44 and token BITWISEAND resolved as shift (OR < BITWISEAND).
    Conflict between rule 44 and token LEFTSHIFT resolved as shift (OR < LEFTSHIFT).
    Conflict between rule 44 and token RIGHTSHIFT resolved as shift (OR < RIGHTSHIFT).
    Conflict between rule 44 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 44 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 44 and token STAR resolved as shift (OR < STAR).
    Conflict between rule 44 and token DIVISION resolved as shift (OR < DIVISION).
    Conflict between rule 44 and token FLOOR resolved as shift (OR < FLOOR).
    Conflict between rule 44 and token REMAINDER resolved as shift (OR < REMAINDER).
    Conflict between rule 44 and token POWER resolved as shift (OR < POWER).


State 58

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   43           | expression AND expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, BITWISEINV]
   44           | expression . OR expression

    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 43 (expression)

    Conflict between rule 43 and token OR resolved as reduce (OR < AND).
    Conflict between rule 43 and token AND resolved as reduce (%left AND).
    Conflict between rule 43 and token IN resolved as shift (AND < IN).
    Conflict between rule 43 and token NOTIN resolved as shift (AND < NOTIN).
    Conflict between rule 43 and token IS resolved as shift (AND < IS).
    Conflict between rule 43 and token ISNOT resolved as shift (AND < ISNOT).
    Conflict between rule 43 and token LESSTHAN resolved as shift (AND < LESSTHAN).
    Conflict between rule 43 and token GREATERTHAN resolved as shift (AND < GREATERTHAN).
    Conflict between rule 43 and token DOUBLEEQUAL resolved as shift (AND < DOUBLEEQUAL).
    Conflict between rule 43 and token NOTEQUAL resolved as shift (AND < NOTEQUAL).
    Conflict between rule 43 and token LESSTHOREQ resolved as shift (AND < LESSTHOREQ).
    Conflict between rule 43 and token GREATTHOREQ resolved as shift (AND < GREATTHOREQ).
    Conflict between rule 43 and token BITWISEOR resolved as shift (AND < BITWISEOR).
    Conflict between rule 43 and token BITWISEXOR resolved as shift (AND < BITWISEXOR).
    Conflict between rule 43 and token BITWISEAND resolved as shift (AND < BITWISEAND).
    Conflict between rule 43 and token LEFTSHIFT resolved as shift (AND < LEFTSHIFT).
    Conflict between rule 43 and token RIGHTSHIFT resolved as shift (AND < RIGHTSHIFT).
    Conflict between rule 43 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 43 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 43 and token STAR resolved as shift (AND < STAR).
    Conflict between rule 43 and token DIVISION resolved as shift (AND < DIVISION).
    Conflict between rule 43 and token FLOOR resolved as shift (AND < FLOOR).
    Conflict between rule 43 and token REMAINDER resolved as shift (AND < REMAINDER).
    Conflict between rule 43 and token POWER resolved as shift (AND < POWER).


State 59

   50 iterable: IDENTIFIER .

    $default  reduce using rule 50 (iterable)


State 60

   51 iterable: RANGE . OBRACE expression EBRACE

    OBRACE  shift, and go to state 89


State 61

   32 expression: expression IN iterable .

    $default  reduce using rule 32 (expression)


State 62

   33 expression: expression NOTIN iterable .

    $default  reduce using rule 33 (expression)


State 63

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   34           | expression IS expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 34 (expression)

    Conflict between rule 34 and token OR resolved as reduce (OR < IS).
    Conflict between rule 34 and token AND resolved as reduce (AND < IS).
    Conflict between rule 34 and token IN resolved as reduce (%left IN).
    Conflict between rule 34 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 34 and token IS resolved as reduce (%left IS).
    Conflict between rule 34 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 34 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 34 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 34 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 34 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 34 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 34 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 34 and token BITWISEOR resolved as shift (IS < BITWISEOR).
    Conflict between rule 34 and token BITWISEXOR resolved as shift (IS < BITWISEXOR).
    Conflict between rule 34 and token BITWISEAND resolved as shift (IS < BITWISEAND).
    Conflict between rule 34 and token LEFTSHIFT resolved as shift (IS < LEFTSHIFT).
    Conflict between rule 34 and token RIGHTSHIFT resolved as shift (IS < RIGHTSHIFT).
    Conflict between rule 34 and token PLUS resolved as shift (IS < PLUS).
    Conflict between rule 34 and token MINUS resolved as shift (IS < MINUS).
    Conflict between rule 34 and token STAR resolved as shift (IS < STAR).
    Conflict between rule 34 and token DIVISION resolved as shift (IS < DIVISION).
    Conflict between rule 34 and token FLOOR resolved as shift (IS < FLOOR).
    Conflict between rule 34 and token REMAINDER resolved as shift (IS < REMAINDER).
    Conflict between rule 34 and token POWER resolved as shift (IS < POWER).


State 64

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   35           | expression ISNOT expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 35 (expression)

    Conflict between rule 35 and token OR resolved as reduce (OR < ISNOT).
    Conflict between rule 35 and token AND resolved as reduce (AND < ISNOT).
    Conflict between rule 35 and token IN resolved as reduce (%left IN).
    Conflict between rule 35 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 35 and token IS resolved as reduce (%left IS).
    Conflict between rule 35 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 35 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 35 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 35 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 35 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 35 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 35 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 35 and token BITWISEOR resolved as shift (ISNOT < BITWISEOR).
    Conflict between rule 35 and token BITWISEXOR resolved as shift (ISNOT < BITWISEXOR).
    Conflict between rule 35 and token BITWISEAND resolved as shift (ISNOT < BITWISEAND).
    Conflict between rule 35 and token LEFTSHIFT resolved as shift (ISNOT < LEFTSHIFT).
    Conflict between rule 35 and token RIGHTSHIFT resolved as shift (ISNOT < RIGHTSHIFT).
    Conflict between rule 35 and token PLUS resolved as shift (ISNOT < PLUS).
    Conflict between rule 35 and token MINUS resolved as shift (ISNOT < MINUS).
    Conflict between rule 35 and token STAR resolved as shift (ISNOT < STAR).
    Conflict between rule 35 and token DIVISION resolved as shift (ISNOT < DIVISION).
    Conflict between rule 35 and token FLOOR resolved as shift (ISNOT < FLOOR).
    Conflict between rule 35 and token REMAINDER resolved as shift (ISNOT < REMAINDER).
    Conflict between rule 35 and token POWER resolved as shift (ISNOT < POWER).


State 65

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   36           | expression LESSTHAN expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 36 (expression)

    Conflict between rule 36 and token OR resolved as reduce (OR < LESSTHAN).
    Conflict between rule 36 and token AND resolved as reduce (AND < LESSTHAN).
    Conflict between rule 36 and token IN resolved as reduce (%left IN).
    Conflict between rule 36 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 36 and token IS resolved as reduce (%left IS).
    Conflict between rule 36 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 36 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 36 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 36 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 36 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 36 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 36 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 36 and token BITWISEOR resolved as shift (LESSTHAN < BITWISEOR).
    Conflict between rule 36 and token BITWISEXOR resolved as shift (LESSTHAN < BITWISEXOR).
    Conflict between rule 36 and token BITWISEAND resolved as shift (LESSTHAN < BITWISEAND).
    Conflict between rule 36 and token LEFTSHIFT resolved as shift (LESSTHAN < LEFTSHIFT).
    Conflict between rule 36 and token RIGHTSHIFT resolved as shift (LESSTHAN < RIGHTSHIFT).
    Conflict between rule 36 and token PLUS resolved as shift (LESSTHAN < PLUS).
    Conflict between rule 36 and token MINUS resolved as shift (LESSTHAN < MINUS).
    Conflict between rule 36 and token STAR resolved as shift (LESSTHAN < STAR).
    Conflict between rule 36 and token DIVISION resolved as shift (LESSTHAN < DIVISION).
    Conflict between rule 36 and token FLOOR resolved as shift (LESSTHAN < FLOOR).
    Conflict between rule 36 and token REMAINDER resolved as shift (LESSTHAN < REMAINDER).
    Conflict between rule 36 and token POWER resolved as shift (LESSTHAN < POWER).


State 66

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   37           | expression GREATERTHAN expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 37 (expression)

    Conflict between rule 37 and token OR resolved as reduce (OR < GREATERTHAN).
    Conflict between rule 37 and token AND resolved as reduce (AND < GREATERTHAN).
    Conflict between rule 37 and token IN resolved as reduce (%left IN).
    Conflict between rule 37 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 37 and token IS resolved as reduce (%left IS).
    Conflict between rule 37 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 37 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 37 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 37 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 37 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 37 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 37 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 37 and token BITWISEOR resolved as shift (GREATERTHAN < BITWISEOR).
    Conflict between rule 37 and token BITWISEXOR resolved as shift (GREATERTHAN < BITWISEXOR).
    Conflict between rule 37 and token BITWISEAND resolved as shift (GREATERTHAN < BITWISEAND).
    Conflict between rule 37 and token LEFTSHIFT resolved as shift (GREATERTHAN < LEFTSHIFT).
    Conflict between rule 37 and token RIGHTSHIFT resolved as shift (GREATERTHAN < RIGHTSHIFT).
    Conflict between rule 37 and token PLUS resolved as shift (GREATERTHAN < PLUS).
    Conflict between rule 37 and token MINUS resolved as shift (GREATERTHAN < MINUS).
    Conflict between rule 37 and token STAR resolved as shift (GREATERTHAN < STAR).
    Conflict between rule 37 and token DIVISION resolved as shift (GREATERTHAN < DIVISION).
    Conflict between rule 37 and token FLOOR resolved as shift (GREATERTHAN < FLOOR).
    Conflict between rule 37 and token REMAINDER resolved as shift (GREATERTHAN < REMAINDER).
    Conflict between rule 37 and token POWER resolved as shift (GREATERTHAN < POWER).


State 67

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   38           | expression DOUBLEEQUAL expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 38 (expression)

    Conflict between rule 38 and token OR resolved as reduce (OR < DOUBLEEQUAL).
    Conflict between rule 38 and token AND resolved as reduce (AND < DOUBLEEQUAL).
    Conflict between rule 38 and token IN resolved as reduce (%left IN).
    Conflict between rule 38 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 38 and token IS resolved as reduce (%left IS).
    Conflict between rule 38 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 38 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 38 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 38 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 38 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 38 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 38 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 38 and token BITWISEOR resolved as shift (DOUBLEEQUAL < BITWISEOR).
    Conflict between rule 38 and token BITWISEXOR resolved as shift (DOUBLEEQUAL < BITWISEXOR).
    Conflict between rule 38 and token BITWISEAND resolved as shift (DOUBLEEQUAL < BITWISEAND).
    Conflict between rule 38 and token LEFTSHIFT resolved as shift (DOUBLEEQUAL < LEFTSHIFT).
    Conflict between rule 38 and token RIGHTSHIFT resolved as shift (DOUBLEEQUAL < RIGHTSHIFT).
    Conflict between rule 38 and token PLUS resolved as shift (DOUBLEEQUAL < PLUS).
    Conflict between rule 38 and token MINUS resolved as shift (DOUBLEEQUAL < MINUS).
    Conflict between rule 38 and token STAR resolved as shift (DOUBLEEQUAL < STAR).
    Conflict between rule 38 and token DIVISION resolved as shift (DOUBLEEQUAL < DIVISION).
    Conflict between rule 38 and token FLOOR resolved as shift (DOUBLEEQUAL < FLOOR).
    Conflict between rule 38 and token REMAINDER resolved as shift (DOUBLEEQUAL < REMAINDER).
    Conflict between rule 38 and token POWER resolved as shift (DOUBLEEQUAL < POWER).


State 68

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   39           | expression NOTEQUAL expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 39 (expression)

    Conflict between rule 39 and token OR resolved as reduce (OR < NOTEQUAL).
    Conflict between rule 39 and token AND resolved as reduce (AND < NOTEQUAL).
    Conflict between rule 39 and token IN resolved as reduce (%left IN).
    Conflict between rule 39 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 39 and token IS resolved as reduce (%left IS).
    Conflict between rule 39 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 39 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 39 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 39 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 39 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 39 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 39 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 39 and token BITWISEOR resolved as shift (NOTEQUAL < BITWISEOR).
    Conflict between rule 39 and token BITWISEXOR resolved as shift (NOTEQUAL < BITWISEXOR).
    Conflict between rule 39 and token BITWISEAND resolved as shift (NOTEQUAL < BITWISEAND).
    Conflict between rule 39 and token LEFTSHIFT resolved as shift (NOTEQUAL < LEFTSHIFT).
    Conflict between rule 39 and token RIGHTSHIFT resolved as shift (NOTEQUAL < RIGHTSHIFT).
    Conflict between rule 39 and token PLUS resolved as shift (NOTEQUAL < PLUS).
    Conflict between rule 39 and token MINUS resolved as shift (NOTEQUAL < MINUS).
    Conflict between rule 39 and token STAR resolved as shift (NOTEQUAL < STAR).
    Conflict between rule 39 and token DIVISION resolved as shift (NOTEQUAL < DIVISION).
    Conflict between rule 39 and token FLOOR resolved as shift (NOTEQUAL < FLOOR).
    Conflict between rule 39 and token REMAINDER resolved as shift (NOTEQUAL < REMAINDER).
    Conflict between rule 39 and token POWER resolved as shift (NOTEQUAL < POWER).


State 69

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   40           | expression LESSTHOREQ expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 40 (expression)

    Conflict between rule 40 and token OR resolved as reduce (OR < LESSTHOREQ).
    Conflict between rule 40 and token AND resolved as reduce (AND < LESSTHOREQ).
    Conflict between rule 40 and token IN resolved as reduce (%left IN).
    Conflict between rule 40 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 40 and token IS resolved as reduce (%left IS).
    Conflict between rule 40 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 40 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 40 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 40 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 40 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 40 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 40 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 40 and token BITWISEOR resolved as shift (LESSTHOREQ < BITWISEOR).
    Conflict between rule 40 and token BITWISEXOR resolved as shift (LESSTHOREQ < BITWISEXOR).
    Conflict between rule 40 and token BITWISEAND resolved as shift (LESSTHOREQ < BITWISEAND).
    Conflict between rule 40 and token LEFTSHIFT resolved as shift (LESSTHOREQ < LEFTSHIFT).
    Conflict between rule 40 and token RIGHTSHIFT resolved as shift (LESSTHOREQ < RIGHTSHIFT).
    Conflict between rule 40 and token PLUS resolved as shift (LESSTHOREQ < PLUS).
    Conflict between rule 40 and token MINUS resolved as shift (LESSTHOREQ < MINUS).
    Conflict between rule 40 and token STAR resolved as shift (LESSTHOREQ < STAR).
    Conflict between rule 40 and token DIVISION resolved as shift (LESSTHOREQ < DIVISION).
    Conflict between rule 40 and token FLOOR resolved as shift (LESSTHOREQ < FLOOR).
    Conflict between rule 40 and token REMAINDER resolved as shift (LESSTHOREQ < REMAINDER).
    Conflict between rule 40 and token POWER resolved as shift (LESSTHOREQ < POWER).


State 70

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   41           | expression GREATTHOREQ expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEINV]
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEOR   shift, and go to state 38
    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 41 (expression)

    Conflict between rule 41 and token OR resolved as reduce (OR < GREATTHOREQ).
    Conflict between rule 41 and token AND resolved as reduce (AND < GREATTHOREQ).
    Conflict between rule 41 and token IN resolved as reduce (%left IN).
    Conflict between rule 41 and token NOTIN resolved as reduce (%left NOTIN).
    Conflict between rule 41 and token IS resolved as reduce (%left IS).
    Conflict between rule 41 and token ISNOT resolved as reduce (%left ISNOT).
    Conflict between rule 41 and token LESSTHAN resolved as reduce (%left LESSTHAN).
    Conflict between rule 41 and token GREATERTHAN resolved as reduce (%left GREATERTHAN).
    Conflict between rule 41 and token DOUBLEEQUAL resolved as reduce (%left DOUBLEEQUAL).
    Conflict between rule 41 and token NOTEQUAL resolved as reduce (%left NOTEQUAL).
    Conflict between rule 41 and token LESSTHOREQ resolved as reduce (%left LESSTHOREQ).
    Conflict between rule 41 and token GREATTHOREQ resolved as reduce (%left GREATTHOREQ).
    Conflict between rule 41 and token BITWISEOR resolved as shift (GREATTHOREQ < BITWISEOR).
    Conflict between rule 41 and token BITWISEXOR resolved as shift (GREATTHOREQ < BITWISEXOR).
    Conflict between rule 41 and token BITWISEAND resolved as shift (GREATTHOREQ < BITWISEAND).
    Conflict between rule 41 and token LEFTSHIFT resolved as shift (GREATTHOREQ < LEFTSHIFT).
    Conflict between rule 41 and token RIGHTSHIFT resolved as shift (GREATTHOREQ < RIGHTSHIFT).
    Conflict between rule 41 and token PLUS resolved as shift (GREATTHOREQ < PLUS).
    Conflict between rule 41 and token MINUS resolved as shift (GREATTHOREQ < MINUS).
    Conflict between rule 41 and token STAR resolved as shift (GREATTHOREQ < STAR).
    Conflict between rule 41 and token DIVISION resolved as shift (GREATTHOREQ < DIVISION).
    Conflict between rule 41 and token FLOOR resolved as shift (GREATTHOREQ < FLOOR).
    Conflict between rule 41 and token REMAINDER resolved as shift (GREATTHOREQ < REMAINDER).
    Conflict between rule 41 and token POWER resolved as shift (GREATTHOREQ < POWER).


State 71

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   31           | expression BITWISEOR expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEINV]
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEXOR  shift, and go to state 39
    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 31 (expression)

    Conflict between rule 31 and token OR resolved as reduce (OR < BITWISEOR).
    Conflict between rule 31 and token AND resolved as reduce (AND < BITWISEOR).
    Conflict between rule 31 and token IN resolved as reduce (IN < BITWISEOR).
    Conflict between rule 31 and token NOTIN resolved as reduce (NOTIN < BITWISEOR).
    Conflict between rule 31 and token IS resolved as reduce (IS < BITWISEOR).
    Conflict between rule 31 and token ISNOT resolved as reduce (ISNOT < BITWISEOR).
    Conflict between rule 31 and token LESSTHAN resolved as reduce (LESSTHAN < BITWISEOR).
    Conflict between rule 31 and token GREATERTHAN resolved as reduce (GREATERTHAN < BITWISEOR).
    Conflict between rule 31 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < BITWISEOR).
    Conflict between rule 31 and token NOTEQUAL resolved as reduce (NOTEQUAL < BITWISEOR).
    Conflict between rule 31 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < BITWISEOR).
    Conflict between rule 31 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < BITWISEOR).
    Conflict between rule 31 and token BITWISEOR resolved as reduce (%left BITWISEOR).
    Conflict between rule 31 and token BITWISEXOR resolved as shift (BITWISEOR < BITWISEXOR).
    Conflict between rule 31 and token BITWISEAND resolved as shift (BITWISEOR < BITWISEAND).
    Conflict between rule 31 and token LEFTSHIFT resolved as shift (BITWISEOR < LEFTSHIFT).
    Conflict between rule 31 and token RIGHTSHIFT resolved as shift (BITWISEOR < RIGHTSHIFT).
    Conflict between rule 31 and token PLUS resolved as shift (BITWISEOR < PLUS).
    Conflict between rule 31 and token MINUS resolved as shift (BITWISEOR < MINUS).
    Conflict between rule 31 and token STAR resolved as shift (BITWISEOR < STAR).
    Conflict between rule 31 and token DIVISION resolved as shift (BITWISEOR < DIVISION).
    Conflict between rule 31 and token FLOOR resolved as shift (BITWISEOR < FLOOR).
    Conflict between rule 31 and token REMAINDER resolved as shift (BITWISEOR < REMAINDER).
    Conflict between rule 31 and token POWER resolved as shift (BITWISEOR < POWER).


State 72

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   30           | expression BITWISEXOR expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEINV]
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    BITWISEAND  shift, and go to state 40
    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 30 (expression)

    Conflict between rule 30 and token OR resolved as reduce (OR < BITWISEXOR).
    Conflict between rule 30 and token AND resolved as reduce (AND < BITWISEXOR).
    Conflict between rule 30 and token IN resolved as reduce (IN < BITWISEXOR).
    Conflict between rule 30 and token NOTIN resolved as reduce (NOTIN < BITWISEXOR).
    Conflict between rule 30 and token IS resolved as reduce (IS < BITWISEXOR).
    Conflict between rule 30 and token ISNOT resolved as reduce (ISNOT < BITWISEXOR).
    Conflict between rule 30 and token LESSTHAN resolved as reduce (LESSTHAN < BITWISEXOR).
    Conflict between rule 30 and token GREATERTHAN resolved as reduce (GREATERTHAN < BITWISEXOR).
    Conflict between rule 30 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < BITWISEXOR).
    Conflict between rule 30 and token NOTEQUAL resolved as reduce (NOTEQUAL < BITWISEXOR).
    Conflict between rule 30 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < BITWISEXOR).
    Conflict between rule 30 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < BITWISEXOR).
    Conflict between rule 30 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEXOR).
    Conflict between rule 30 and token BITWISEXOR resolved as reduce (%left BITWISEXOR).
    Conflict between rule 30 and token BITWISEAND resolved as shift (BITWISEXOR < BITWISEAND).
    Conflict between rule 30 and token LEFTSHIFT resolved as shift (BITWISEXOR < LEFTSHIFT).
    Conflict between rule 30 and token RIGHTSHIFT resolved as shift (BITWISEXOR < RIGHTSHIFT).
    Conflict between rule 30 and token PLUS resolved as shift (BITWISEXOR < PLUS).
    Conflict between rule 30 and token MINUS resolved as shift (BITWISEXOR < MINUS).
    Conflict between rule 30 and token STAR resolved as shift (BITWISEXOR < STAR).
    Conflict between rule 30 and token DIVISION resolved as shift (BITWISEXOR < DIVISION).
    Conflict between rule 30 and token FLOOR resolved as shift (BITWISEXOR < FLOOR).
    Conflict between rule 30 and token REMAINDER resolved as shift (BITWISEXOR < REMAINDER).
    Conflict between rule 30 and token POWER resolved as shift (BITWISEXOR < POWER).


State 73

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   29           | expression BITWISEAND expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, BITWISEINV]
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    LEFTSHIFT   shift, and go to state 41
    RIGHTSHIFT  shift, and go to state 42
    PLUS        shift, and go to state 43
    MINUS       shift, and go to state 44
    STAR        shift, and go to state 45
    DIVISION    shift, and go to state 46
    FLOOR       shift, and go to state 47
    REMAINDER   shift, and go to state 48
    POWER       shift, and go to state 49

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token OR resolved as reduce (OR < BITWISEAND).
    Conflict between rule 29 and token AND resolved as reduce (AND < BITWISEAND).
    Conflict between rule 29 and token IN resolved as reduce (IN < BITWISEAND).
    Conflict between rule 29 and token NOTIN resolved as reduce (NOTIN < BITWISEAND).
    Conflict between rule 29 and token IS resolved as reduce (IS < BITWISEAND).
    Conflict between rule 29 and token ISNOT resolved as reduce (ISNOT < BITWISEAND).
    Conflict between rule 29 and token LESSTHAN resolved as reduce (LESSTHAN < BITWISEAND).
    Conflict between rule 29 and token GREATERTHAN resolved as reduce (GREATERTHAN < BITWISEAND).
    Conflict between rule 29 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < BITWISEAND).
    Conflict between rule 29 and token NOTEQUAL resolved as reduce (NOTEQUAL < BITWISEAND).
    Conflict between rule 29 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < BITWISEAND).
    Conflict between rule 29 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < BITWISEAND).
    Conflict between rule 29 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEAND).
    Conflict between rule 29 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEAND).
    Conflict between rule 29 and token BITWISEAND resolved as reduce (%left BITWISEAND).
    Conflict between rule 29 and token LEFTSHIFT resolved as shift (BITWISEAND < LEFTSHIFT).
    Conflict between rule 29 and token RIGHTSHIFT resolved as shift (BITWISEAND < RIGHTSHIFT).
    Conflict between rule 29 and token PLUS resolved as shift (BITWISEAND < PLUS).
    Conflict between rule 29 and token MINUS resolved as shift (BITWISEAND < MINUS).
    Conflict between rule 29 and token STAR resolved as shift (BITWISEAND < STAR).
    Conflict between rule 29 and token DIVISION resolved as shift (BITWISEAND < DIVISION).
    Conflict between rule 29 and token FLOOR resolved as shift (BITWISEAND < FLOOR).
    Conflict between rule 29 and token REMAINDER resolved as shift (BITWISEAND < REMAINDER).
    Conflict between rule 29 and token POWER resolved as shift (BITWISEAND < POWER).


State 74

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   27           | expression LEFTSHIFT expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, BITWISEINV]
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    PLUS       shift, and go to state 43
    MINUS      shift, and go to state 44
    STAR       shift, and go to state 45
    DIVISION   shift, and go to state 46
    FLOOR      shift, and go to state 47
    REMAINDER  shift, and go to state 48
    POWER      shift, and go to state 49

    $default  reduce using rule 27 (expression)

    Conflict between rule 27 and token OR resolved as reduce (OR < LEFTSHIFT).
    Conflict between rule 27 and token AND resolved as reduce (AND < LEFTSHIFT).
    Conflict between rule 27 and token IN resolved as reduce (IN < LEFTSHIFT).
    Conflict between rule 27 and token NOTIN resolved as reduce (NOTIN < LEFTSHIFT).
    Conflict between rule 27 and token IS resolved as reduce (IS < LEFTSHIFT).
    Conflict between rule 27 and token ISNOT resolved as reduce (ISNOT < LEFTSHIFT).
    Conflict between rule 27 and token LESSTHAN resolved as reduce (LESSTHAN < LEFTSHIFT).
    Conflict between rule 27 and token GREATERTHAN resolved as reduce (GREATERTHAN < LEFTSHIFT).
    Conflict between rule 27 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < LEFTSHIFT).
    Conflict between rule 27 and token NOTEQUAL resolved as reduce (NOTEQUAL < LEFTSHIFT).
    Conflict between rule 27 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < LEFTSHIFT).
    Conflict between rule 27 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < LEFTSHIFT).
    Conflict between rule 27 and token BITWISEOR resolved as reduce (BITWISEOR < LEFTSHIFT).
    Conflict between rule 27 and token BITWISEXOR resolved as reduce (BITWISEXOR < LEFTSHIFT).
    Conflict between rule 27 and token BITWISEAND resolved as reduce (BITWISEAND < LEFTSHIFT).
    Conflict between rule 27 and token LEFTSHIFT resolved as reduce (%left LEFTSHIFT).
    Conflict between rule 27 and token RIGHTSHIFT resolved as reduce (%left RIGHTSHIFT).
    Conflict between rule 27 and token PLUS resolved as shift (LEFTSHIFT < PLUS).
    Conflict between rule 27 and token MINUS resolved as shift (LEFTSHIFT < MINUS).
    Conflict between rule 27 and token STAR resolved as shift (LEFTSHIFT < STAR).
    Conflict between rule 27 and token DIVISION resolved as shift (LEFTSHIFT < DIVISION).
    Conflict between rule 27 and token FLOOR resolved as shift (LEFTSHIFT < FLOOR).
    Conflict between rule 27 and token REMAINDER resolved as shift (LEFTSHIFT < REMAINDER).
    Conflict between rule 27 and token POWER resolved as shift (LEFTSHIFT < POWER).


State 75

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   28           | expression RIGHTSHIFT expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, BITWISEINV]
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    PLUS       shift, and go to state 43
    MINUS      shift, and go to state 44
    STAR       shift, and go to state 45
    DIVISION   shift, and go to state 46
    FLOOR      shift, and go to state 47
    REMAINDER  shift, and go to state 48
    POWER      shift, and go to state 49

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token OR resolved as reduce (OR < RIGHTSHIFT).
    Conflict between rule 28 and token AND resolved as reduce (AND < RIGHTSHIFT).
    Conflict between rule 28 and token IN resolved as reduce (IN < RIGHTSHIFT).
    Conflict between rule 28 and token NOTIN resolved as reduce (NOTIN < RIGHTSHIFT).
    Conflict between rule 28 and token IS resolved as reduce (IS < RIGHTSHIFT).
    Conflict between rule 28 and token ISNOT resolved as reduce (ISNOT < RIGHTSHIFT).
    Conflict between rule 28 and token LESSTHAN resolved as reduce (LESSTHAN < RIGHTSHIFT).
    Conflict between rule 28 and token GREATERTHAN resolved as reduce (GREATERTHAN < RIGHTSHIFT).
    Conflict between rule 28 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < RIGHTSHIFT).
    Conflict between rule 28 and token NOTEQUAL resolved as reduce (NOTEQUAL < RIGHTSHIFT).
    Conflict between rule 28 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < RIGHTSHIFT).
    Conflict between rule 28 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < RIGHTSHIFT).
    Conflict between rule 28 and token BITWISEOR resolved as reduce (BITWISEOR < RIGHTSHIFT).
    Conflict between rule 28 and token BITWISEXOR resolved as reduce (BITWISEXOR < RIGHTSHIFT).
    Conflict between rule 28 and token BITWISEAND resolved as reduce (BITWISEAND < RIGHTSHIFT).
    Conflict between rule 28 and token LEFTSHIFT resolved as reduce (%left LEFTSHIFT).
    Conflict between rule 28 and token RIGHTSHIFT resolved as reduce (%left RIGHTSHIFT).
    Conflict between rule 28 and token PLUS resolved as shift (RIGHTSHIFT < PLUS).
    Conflict between rule 28 and token MINUS resolved as shift (RIGHTSHIFT < MINUS).
    Conflict between rule 28 and token STAR resolved as shift (RIGHTSHIFT < STAR).
    Conflict between rule 28 and token DIVISION resolved as shift (RIGHTSHIFT < DIVISION).
    Conflict between rule 28 and token FLOOR resolved as shift (RIGHTSHIFT < FLOOR).
    Conflict between rule 28 and token REMAINDER resolved as shift (RIGHTSHIFT < REMAINDER).
    Conflict between rule 28 and token POWER resolved as shift (RIGHTSHIFT < POWER).


State 76

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   25           | expression PLUS expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, BITWISEINV]
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    STAR       shift, and go to state 45
    DIVISION   shift, and go to state 46
    FLOOR      shift, and go to state 47
    REMAINDER  shift, and go to state 48
    POWER      shift, and go to state 49

    $default  reduce using rule 25 (expression)

    Conflict between rule 25 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 25 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 25 and token IN resolved as reduce (IN < PLUS).
    Conflict between rule 25 and token NOTIN resolved as reduce (NOTIN < PLUS).
    Conflict between rule 25 and token IS resolved as reduce (IS < PLUS).
    Conflict between rule 25 and token ISNOT resolved as reduce (ISNOT < PLUS).
    Conflict between rule 25 and token LESSTHAN resolved as reduce (LESSTHAN < PLUS).
    Conflict between rule 25 and token GREATERTHAN resolved as reduce (GREATERTHAN < PLUS).
    Conflict between rule 25 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < PLUS).
    Conflict between rule 25 and token NOTEQUAL resolved as reduce (NOTEQUAL < PLUS).
    Conflict between rule 25 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < PLUS).
    Conflict between rule 25 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < PLUS).
    Conflict between rule 25 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 25 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 25 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 25 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < PLUS).
    Conflict between rule 25 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < PLUS).
    Conflict between rule 25 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 25 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 25 and token STAR resolved as shift (PLUS < STAR).
    Conflict between rule 25 and token DIVISION resolved as shift (PLUS < DIVISION).
    Conflict between rule 25 and token FLOOR resolved as shift (PLUS < FLOOR).
    Conflict between rule 25 and token REMAINDER resolved as shift (PLUS < REMAINDER).
    Conflict between rule 25 and token POWER resolved as shift (PLUS < POWER).


State 77

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   26           | expression MINUS expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, BITWISEINV]
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    STAR       shift, and go to state 45
    DIVISION   shift, and go to state 46
    FLOOR      shift, and go to state 47
    REMAINDER  shift, and go to state 48
    POWER      shift, and go to state 49

    $default  reduce using rule 26 (expression)

    Conflict between rule 26 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 26 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 26 and token IN resolved as reduce (IN < MINUS).
    Conflict between rule 26 and token NOTIN resolved as reduce (NOTIN < MINUS).
    Conflict between rule 26 and token IS resolved as reduce (IS < MINUS).
    Conflict between rule 26 and token ISNOT resolved as reduce (ISNOT < MINUS).
    Conflict between rule 26 and token LESSTHAN resolved as reduce (LESSTHAN < MINUS).
    Conflict between rule 26 and token GREATERTHAN resolved as reduce (GREATERTHAN < MINUS).
    Conflict between rule 26 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < MINUS).
    Conflict between rule 26 and token NOTEQUAL resolved as reduce (NOTEQUAL < MINUS).
    Conflict between rule 26 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < MINUS).
    Conflict between rule 26 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < MINUS).
    Conflict between rule 26 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 26 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 26 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 26 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < MINUS).
    Conflict between rule 26 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < MINUS).
    Conflict between rule 26 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 26 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 26 and token STAR resolved as shift (MINUS < STAR).
    Conflict between rule 26 and token DIVISION resolved as shift (MINUS < DIVISION).
    Conflict between rule 26 and token FLOOR resolved as shift (MINUS < FLOOR).
    Conflict between rule 26 and token REMAINDER resolved as shift (MINUS < REMAINDER).
    Conflict between rule 26 and token POWER resolved as shift (MINUS < POWER).


State 78

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   21           | expression STAR expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, BITWISEINV]
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    POWER  shift, and go to state 49

    $default  reduce using rule 21 (expression)

    Conflict between rule 21 and token OR resolved as reduce (OR < STAR).
    Conflict between rule 21 and token AND resolved as reduce (AND < STAR).
    Conflict between rule 21 and token IN resolved as reduce (IN < STAR).
    Conflict between rule 21 and token NOTIN resolved as reduce (NOTIN < STAR).
    Conflict between rule 21 and token IS resolved as reduce (IS < STAR).
    Conflict between rule 21 and token ISNOT resolved as reduce (ISNOT < STAR).
    Conflict between rule 21 and token LESSTHAN resolved as reduce (LESSTHAN < STAR).
    Conflict between rule 21 and token GREATERTHAN resolved as reduce (GREATERTHAN < STAR).
    Conflict between rule 21 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < STAR).
    Conflict between rule 21 and token NOTEQUAL resolved as reduce (NOTEQUAL < STAR).
    Conflict between rule 21 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < STAR).
    Conflict between rule 21 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < STAR).
    Conflict between rule 21 and token BITWISEOR resolved as reduce (BITWISEOR < STAR).
    Conflict between rule 21 and token BITWISEXOR resolved as reduce (BITWISEXOR < STAR).
    Conflict between rule 21 and token BITWISEAND resolved as reduce (BITWISEAND < STAR).
    Conflict between rule 21 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < STAR).
    Conflict between rule 21 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < STAR).
    Conflict between rule 21 and token PLUS resolved as reduce (PLUS < STAR).
    Conflict between rule 21 and token MINUS resolved as reduce (MINUS < STAR).
    Conflict between rule 21 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 21 and token DIVISION resolved as reduce (%left DIVISION).
    Conflict between rule 21 and token FLOOR resolved as reduce (%left FLOOR).
    Conflict between rule 21 and token REMAINDER resolved as reduce (%left REMAINDER).
    Conflict between rule 21 and token POWER resolved as shift (STAR < POWER).


State 79

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   22           | expression DIVISION expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, BITWISEINV]
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    POWER  shift, and go to state 49

    $default  reduce using rule 22 (expression)

    Conflict between rule 22 and token OR resolved as reduce (OR < DIVISION).
    Conflict between rule 22 and token AND resolved as reduce (AND < DIVISION).
    Conflict between rule 22 and token IN resolved as reduce (IN < DIVISION).
    Conflict between rule 22 and token NOTIN resolved as reduce (NOTIN < DIVISION).
    Conflict between rule 22 and token IS resolved as reduce (IS < DIVISION).
    Conflict between rule 22 and token ISNOT resolved as reduce (ISNOT < DIVISION).
    Conflict between rule 22 and token LESSTHAN resolved as reduce (LESSTHAN < DIVISION).
    Conflict between rule 22 and token GREATERTHAN resolved as reduce (GREATERTHAN < DIVISION).
    Conflict between rule 22 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < DIVISION).
    Conflict between rule 22 and token NOTEQUAL resolved as reduce (NOTEQUAL < DIVISION).
    Conflict between rule 22 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < DIVISION).
    Conflict between rule 22 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < DIVISION).
    Conflict between rule 22 and token BITWISEOR resolved as reduce (BITWISEOR < DIVISION).
    Conflict between rule 22 and token BITWISEXOR resolved as reduce (BITWISEXOR < DIVISION).
    Conflict between rule 22 and token BITWISEAND resolved as reduce (BITWISEAND < DIVISION).
    Conflict between rule 22 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < DIVISION).
    Conflict between rule 22 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < DIVISION).
    Conflict between rule 22 and token PLUS resolved as reduce (PLUS < DIVISION).
    Conflict between rule 22 and token MINUS resolved as reduce (MINUS < DIVISION).
    Conflict between rule 22 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 22 and token DIVISION resolved as reduce (%left DIVISION).
    Conflict between rule 22 and token FLOOR resolved as reduce (%left FLOOR).
    Conflict between rule 22 and token REMAINDER resolved as reduce (%left REMAINDER).
    Conflict between rule 22 and token POWER resolved as shift (DIVISION < POWER).


State 80

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   23           | expression FLOOR expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, BITWISEINV]
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    POWER  shift, and go to state 49

    $default  reduce using rule 23 (expression)

    Conflict between rule 23 and token OR resolved as reduce (OR < FLOOR).
    Conflict between rule 23 and token AND resolved as reduce (AND < FLOOR).
    Conflict between rule 23 and token IN resolved as reduce (IN < FLOOR).
    Conflict between rule 23 and token NOTIN resolved as reduce (NOTIN < FLOOR).
    Conflict between rule 23 and token IS resolved as reduce (IS < FLOOR).
    Conflict between rule 23 and token ISNOT resolved as reduce (ISNOT < FLOOR).
    Conflict between rule 23 and token LESSTHAN resolved as reduce (LESSTHAN < FLOOR).
    Conflict between rule 23 and token GREATERTHAN resolved as reduce (GREATERTHAN < FLOOR).
    Conflict between rule 23 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < FLOOR).
    Conflict between rule 23 and token NOTEQUAL resolved as reduce (NOTEQUAL < FLOOR).
    Conflict between rule 23 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < FLOOR).
    Conflict between rule 23 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < FLOOR).
    Conflict between rule 23 and token BITWISEOR resolved as reduce (BITWISEOR < FLOOR).
    Conflict between rule 23 and token BITWISEXOR resolved as reduce (BITWISEXOR < FLOOR).
    Conflict between rule 23 and token BITWISEAND resolved as reduce (BITWISEAND < FLOOR).
    Conflict between rule 23 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < FLOOR).
    Conflict between rule 23 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < FLOOR).
    Conflict between rule 23 and token PLUS resolved as reduce (PLUS < FLOOR).
    Conflict between rule 23 and token MINUS resolved as reduce (MINUS < FLOOR).
    Conflict between rule 23 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 23 and token DIVISION resolved as reduce (%left DIVISION).
    Conflict between rule 23 and token FLOOR resolved as reduce (%left FLOOR).
    Conflict between rule 23 and token REMAINDER resolved as reduce (%left REMAINDER).
    Conflict between rule 23 and token POWER resolved as shift (FLOOR < POWER).


State 81

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   24           | expression REMAINDER expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, BITWISEINV]
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    POWER  shift, and go to state 49

    $default  reduce using rule 24 (expression)

    Conflict between rule 24 and token OR resolved as reduce (OR < REMAINDER).
    Conflict between rule 24 and token AND resolved as reduce (AND < REMAINDER).
    Conflict between rule 24 and token IN resolved as reduce (IN < REMAINDER).
    Conflict between rule 24 and token NOTIN resolved as reduce (NOTIN < REMAINDER).
    Conflict between rule 24 and token IS resolved as reduce (IS < REMAINDER).
    Conflict between rule 24 and token ISNOT resolved as reduce (ISNOT < REMAINDER).
    Conflict between rule 24 and token LESSTHAN resolved as reduce (LESSTHAN < REMAINDER).
    Conflict between rule 24 and token GREATERTHAN resolved as reduce (GREATERTHAN < REMAINDER).
    Conflict between rule 24 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < REMAINDER).
    Conflict between rule 24 and token NOTEQUAL resolved as reduce (NOTEQUAL < REMAINDER).
    Conflict between rule 24 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < REMAINDER).
    Conflict between rule 24 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < REMAINDER).
    Conflict between rule 24 and token BITWISEOR resolved as reduce (BITWISEOR < REMAINDER).
    Conflict between rule 24 and token BITWISEXOR resolved as reduce (BITWISEXOR < REMAINDER).
    Conflict between rule 24 and token BITWISEAND resolved as reduce (BITWISEAND < REMAINDER).
    Conflict between rule 24 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < REMAINDER).
    Conflict between rule 24 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < REMAINDER).
    Conflict between rule 24 and token PLUS resolved as reduce (PLUS < REMAINDER).
    Conflict between rule 24 and token MINUS resolved as reduce (MINUS < REMAINDER).
    Conflict between rule 24 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 24 and token DIVISION resolved as reduce (%left DIVISION).
    Conflict between rule 24 and token FLOOR resolved as reduce (%left FLOOR).
    Conflict between rule 24 and token REMAINDER resolved as reduce (%left REMAINDER).
    Conflict between rule 24 and token POWER resolved as shift (REMAINDER < POWER).


State 82

   20 expression: expression . POWER expression
   20           | expression POWER expression .  [$end, INT, DECIMAL, STRING, IDENTIFIER, INDENTTOK, IF, PASS, COLON, OBRACE, EBRACE, COMMA, DEF, OR, AND, NOT, IN, NOTIN, IS, ISNOT, LESSTHAN, GREATERTHAN, DOUBLEEQUAL, NOTEQUAL, LESSTHOREQ, GREATTHOREQ, BITWISEOR, BITWISEXOR, BITWISEAND, LEFTSHIFT, RIGHTSHIFT, PLUS, MINUS, STAR, DIVISION, FLOOR, REMAINDER, BITWISEINV]
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    POWER  shift, and go to state 49

    $default  reduce using rule 20 (expression)

    Conflict between rule 20 and token OR resolved as reduce (OR < POWER).
    Conflict between rule 20 and token AND resolved as reduce (AND < POWER).
    Conflict between rule 20 and token IN resolved as reduce (IN < POWER).
    Conflict between rule 20 and token NOTIN resolved as reduce (NOTIN < POWER).
    Conflict between rule 20 and token IS resolved as reduce (IS < POWER).
    Conflict between rule 20 and token ISNOT resolved as reduce (ISNOT < POWER).
    Conflict between rule 20 and token LESSTHAN resolved as reduce (LESSTHAN < POWER).
    Conflict between rule 20 and token GREATERTHAN resolved as reduce (GREATERTHAN < POWER).
    Conflict between rule 20 and token DOUBLEEQUAL resolved as reduce (DOUBLEEQUAL < POWER).
    Conflict between rule 20 and token NOTEQUAL resolved as reduce (NOTEQUAL < POWER).
    Conflict between rule 20 and token LESSTHOREQ resolved as reduce (LESSTHOREQ < POWER).
    Conflict between rule 20 and token GREATTHOREQ resolved as reduce (GREATTHOREQ < POWER).
    Conflict between rule 20 and token BITWISEOR resolved as reduce (BITWISEOR < POWER).
    Conflict between rule 20 and token BITWISEXOR resolved as reduce (BITWISEXOR < POWER).
    Conflict between rule 20 and token BITWISEAND resolved as reduce (BITWISEAND < POWER).
    Conflict between rule 20 and token LEFTSHIFT resolved as reduce (LEFTSHIFT < POWER).
    Conflict between rule 20 and token RIGHTSHIFT resolved as reduce (RIGHTSHIFT < POWER).
    Conflict between rule 20 and token PLUS resolved as reduce (PLUS < POWER).
    Conflict between rule 20 and token MINUS resolved as reduce (MINUS < POWER).
    Conflict between rule 20 and token STAR resolved as reduce (STAR < POWER).
    Conflict between rule 20 and token DIVISION resolved as reduce (DIVISION < POWER).
    Conflict between rule 20 and token FLOOR resolved as reduce (FLOOR < POWER).
    Conflict between rule 20 and token REMAINDER resolved as reduce (REMAINDER < POWER).
    Conflict between rule 20 and token POWER resolved as shift (%right POWER).


State 83

   49 expression: IDENTIFIER OBRACE argscall EBRACE .

    $default  reduce using rule 49 (expression)


State 84

   12 argscall: argscall COMMA . expression
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 90


State 85

   10 argsdefinition: IDENTIFIER .

    $default  reduce using rule 10 (argsdefinition)


State 86

    8 block: DEF IDENTIFIER OBRACE argsdefinition . EBRACE
    9 argsdefinition: argsdefinition . COMMA IDENTIFIER

    EBRACE  shift, and go to state 91
    COMMA   shift, and go to state 92


State 87

   16 blockstmt: INDENTTOK typeline .

    $default  reduce using rule 16 (blockstmt)


State 88

    4 typeline: . expression
    5         | . block COLON blockstmt
    6         | . PASS
    7 block: . IF expression
    8      | . DEF IDENTIFIER OBRACE argsdefinition EBRACE
   15 blockstmt: blockstmt INDENTTOK . typeline
   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    IF          shift, and go to state 5
    PASS        shift, and go to state 6
    OBRACE      shift, and go to state 7
    DEF         shift, and go to state 8
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    typeline    go to state 93
    block       go to state 14
    expression  go to state 15


State 89

   17 expression: . IDENTIFIER ASSIGNMENT expression
   18           | . OBRACE expression EBRACE
   19           | . BITWISEINV expression
   20           | . expression POWER expression
   21           | . expression STAR expression
   22           | . expression DIVISION expression
   23           | . expression FLOOR expression
   24           | . expression REMAINDER expression
   25           | . expression PLUS expression
   26           | . expression MINUS expression
   27           | . expression LEFTSHIFT expression
   28           | . expression RIGHTSHIFT expression
   29           | . expression BITWISEAND expression
   30           | . expression BITWISEXOR expression
   31           | . expression BITWISEOR expression
   32           | . expression IN iterable
   33           | . expression NOTIN iterable
   34           | . expression IS expression
   35           | . expression ISNOT expression
   36           | . expression LESSTHAN expression
   37           | . expression GREATERTHAN expression
   38           | . expression DOUBLEEQUAL expression
   39           | . expression NOTEQUAL expression
   40           | . expression LESSTHOREQ expression
   41           | . expression GREATTHOREQ expression
   42           | . NOT expression
   43           | . expression AND expression
   44           | . expression OR expression
   45           | . IDENTIFIER
   46           | . INT
   47           | . STRING
   48           | . DECIMAL
   49           | . IDENTIFIER OBRACE argscall EBRACE
   51 iterable: RANGE OBRACE . expression EBRACE

    INT         shift, and go to state 1
    DECIMAL     shift, and go to state 2
    STRING      shift, and go to state 3
    IDENTIFIER  shift, and go to state 4
    OBRACE      shift, and go to state 7
    NOT         shift, and go to state 9
    BITWISEINV  shift, and go to state 10

    expression  go to state 94


State 90

   12 argscall: argscall COMMA expression .  [EBRACE, COMMA]
   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression

    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49

    $default  reduce using rule 12 (argscall)


State 91

    8 block: DEF IDENTIFIER OBRACE argsdefinition EBRACE .

    $default  reduce using rule 8 (block)


State 92

    9 argsdefinition: argsdefinition COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 95


State 93

   15 blockstmt: blockstmt INDENTTOK typeline .

    $default  reduce using rule 15 (blockstmt)


State 94

   20 expression: expression . POWER expression
   21           | expression . STAR expression
   22           | expression . DIVISION expression
   23           | expression . FLOOR expression
   24           | expression . REMAINDER expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . LEFTSHIFT expression
   28           | expression . RIGHTSHIFT expression
   29           | expression . BITWISEAND expression
   30           | expression . BITWISEXOR expression
   31           | expression . BITWISEOR expression
   32           | expression . IN iterable
   33           | expression . NOTIN iterable
   34           | expression . IS expression
   35           | expression . ISNOT expression
   36           | expression . LESSTHAN expression
   37           | expression . GREATERTHAN expression
   38           | expression . DOUBLEEQUAL expression
   39           | expression . NOTEQUAL expression
   40           | expression . LESSTHOREQ expression
   41           | expression . GREATTHOREQ expression
   43           | expression . AND expression
   44           | expression . OR expression
   51 iterable: RANGE OBRACE expression . EBRACE

    EBRACE       shift, and go to state 96
    OR           shift, and go to state 26
    AND          shift, and go to state 27
    IN           shift, and go to state 28
    NOTIN        shift, and go to state 29
    IS           shift, and go to state 30
    ISNOT        shift, and go to state 31
    LESSTHAN     shift, and go to state 32
    GREATERTHAN  shift, and go to state 33
    DOUBLEEQUAL  shift, and go to state 34
    NOTEQUAL     shift, and go to state 35
    LESSTHOREQ   shift, and go to state 36
    GREATTHOREQ  shift, and go to state 37
    BITWISEOR    shift, and go to state 38
    BITWISEXOR   shift, and go to state 39
    BITWISEAND   shift, and go to state 40
    LEFTSHIFT    shift, and go to state 41
    RIGHTSHIFT   shift, and go to state 42
    PLUS         shift, and go to state 43
    MINUS        shift, and go to state 44
    STAR         shift, and go to state 45
    DIVISION     shift, and go to state 46
    FLOOR        shift, and go to state 47
    REMAINDER    shift, and go to state 48
    POWER        shift, and go to state 49


State 95

    9 argsdefinition: argsdefinition COMMA IDENTIFIER .

    $default  reduce using rule 9 (argsdefinition)


State 96

   51 iterable: RANGE OBRACE expression EBRACE .

    $default  reduce using rule 51 (iterable)
